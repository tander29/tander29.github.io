{"version":3,"sources":["Components/About.jsx","Components/SingleProject.jsx","Constants/projectList.jsx","Components/Projects.jsx","Components/Resume.jsx","Components/Profile.jsx","Components/Contact.jsx","Components/Main.jsx","Components/Home.jsx","App.js","serviceWorker.js","Redux/Types.jsx","Redux/Reducers.jsx","Redux/Store.jsx","index.js","images/headshot.jpg","images/mountain2.jpg"],"names":["About","react_default","a","createElement","style","color","Component","cardStyle","height","width","minHeight","minWidth","margin","SingleProject","_this$props$projectDe","this","props","projectDetails","title","repo","live","about","img","lib","background","concat","border","href","target","colored","projectList","projects","projectBoardStyle","display","justifyContent","Projects","renderProjects","map","p","index","SingleProject_SingleProject","key","Fragment","Resume","Profile","Contact","Main","Switch","Route","exact","path","component","layoutStyle","mountain","filter","Home","position","transparent","Link","to","Components_Main","React","App","className","Home_Home","Boolean","window","location","hostname","match","Types","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","history","createBrowserHistory","middleware","routerMiddleware","thunk","store","createStore","connectRouter","state","arguments","length","undefined","type","applyMiddleware","apply","rootElement","document","getElementById","ReactDOM","render","es","BrowserRouter","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.271fd012.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div>\n        <h1 style={{ color: \"white\" }}>About</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardTitle,\n  CardText,\n  CardActions,\n  Button,\n  CardMenu,\n  IconButton\n} from \"react-mdl\";\nimport avatar from \"../images/headshot.jpg\";\n\nconst cardStyle = {\n  height: \"550px\",\n  width: \"400px\",\n  minHeight: \"400px\",\n  minWidth: \"200px\",\n  margin: \"auto\"\n};\n\nexport default class SingleProject extends Component {\n  render() {\n    const { title, repo, live, about, img } = this.props.projectDetails;\n    return (\n      <Card style={cardStyle}>\n        <CardTitle\n          style={{\n            background: `url(${img}) center / cover no-repeat`,\n            height: \"60%\",\n            color: \"white\"\n          }}\n        >\n          {title}\n        </CardTitle>\n        <CardText>{about}</CardText>\n        <CardActions border />\n        <Button href={repo} target=\"_blank\" colored>\n          The Code (Github)\n        </Button>\n        <Button href={live} target=\"_blank\" colored>\n          See it live\n        </Button>\n      </Card>\n    );\n  }\n}\n","const projectList = {\n  projects: [\n    {\n      title: \"Book Buddies\",\n      repo: \"https://www.github.com/tander29/bookbuddies\",\n      live: \"https://tander29.github.io/bookbuddies\",\n      about: `Book Sharing Website Full stack!  React, Redux, Google Books API integration.  \n    Collaborative project. Backend info found on bookbuddy-api`,\n      img:\n        \"http://blog.addthiscdn.com/wp-content/uploads/2014/11/addthis-react-flux-javascript-scaling.png\"\n    },\n    {\n      title: \"Bookbuddy API\",\n      repo: \"https://www.github.com/tander29/bookbuddy-api\",\n      live: \"https://tander29.github.io/bookbuddies\",\n      about: `Backend of Full stack project.  Restful API using Nodejs, SQL/Postgres, hosted on Heroku.  \n    Front end found on Book Buddies card`,\n      img:\n        \"http://blog.addthiscdn.com/wp-content/uploads/2014/11/addthis-react-flux-javascript-scaling.png\"\n    },\n    {\n      title: \"Kwitter (Kenzie+Twitter)\",\n      repo: \"https://www.github.com/tander29/kwitter\",\n      live: \"https://tander29.github.io/kwitter\",\n      about: `Twitter MVP clone!  React, Redux, Semantic-ui. Scrum Master for collaborative project. \n      Integration with a provided REST API, first larger collaborative project`,\n      img:\n        \"http://blog.addthiscdn.com/wp-content/uploads/2014/11/addthis-react-flux-javascript-scaling.png\"\n    },\n    {\n      title: \"Jeopardy\",\n      repo: \"https://github.com/tander29/frontend-jeopardy-instantanswers\",\n      live: \"https://tander29.github.io/frontend-jeopardy-instantanswers/\",\n      about: `Jeopardy game: questions from free API on internet, \n      DuckDuckGo API integration that will show answer(if hit with DuckDuckGo)`,\n      img:\n        \"https://d14nx13ylsx7x8.cloudfront.net/courses/images/000/000/035/original/html_css.png\"\n    }\n  ]\n};\n\nexport default projectList;\n","import React, { Component } from \"react\";\nimport SingleProject from \"./SingleProject\";\nimport projectList from \"../Constants/projectList.jsx\";\n\nconst projectBoardStyle = {\n  display: \"flex\",\n  justifyContent: \"space-between\"\n};\nexport default class Projects extends Component {\n  renderProjects = () => {\n    return projectList.projects.map((p, index) => (\n      <SingleProject projectDetails={p} key={index} />\n    ));\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1 style={{ color: \"white\" }}>Projects</h1>\n        <div style={projectBoardStyle}>{this.renderProjects()}</div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Resume extends Component {\n  render() {\n    return <h1 style={{ color: \"white\" }}>Resume</h1>;\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Profile extends Component {\n  render() {\n    return <h1 style={{ color: \"white\" }}>Profile</h1>;\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Contact extends Component {\n  render() {\n    return <h1 style={{ color: \"white\" }}>Contact</h1>;\n  }\n}\n","import React from \"react\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Projects from \"./Projects\";\nimport Resume from \"./Resume\";\nimport Profile from \"./Profile\"\nimport Contact from \"./Contact\";\nimport { Switch, Route } from \"react-router-dom\";\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Profile} />\n    <Route exact path=\"/resume\" component={Resume} />\n    <Route exact path=\"/contact\" component={Contact} />\n    <Route exact path=\"/projects\" component={Projects} />\n    <Route exact path=\"/about\" component={About} />\n  </Switch>\n);\n\nexport default Main;\n","import React from \"react\";\nimport headshot from \"../images/headshot.jpg\";\nimport { Header, Content, Drawer, Layout, Navigation } from \"react-mdl\";\nimport mountain from \"../images/mountain2.jpg\";\nimport Main from \"./Main\";\nimport { Link } from \"react-router-dom\";\n\nconst layoutStyle = {\n  background: `url(${mountain}) center / cover`,\n  filter: \"grayscale(60%)\"\n};\n\nexport default class Home extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div style={{ height: \"100vh\", width: \"100vw\", position: \"relative\" }}>\n          <Layout style={layoutStyle}>\n            <Header\n              transparent\n              title=\"Travis Anderson\"\n              style={{ color: \"white\" }}\n            >\n              <Navigation>\n                <Link to=\"/resume\">Resume</Link>\n                <Link to=\"/about\">About</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/contact\">Contact</Link>\n              </Navigation>\n            </Header>\n            <Drawer title=\"Travis Anderson\">\n              <Navigation>\n                <Link to=\"/resume\">Resume</Link>\n                <Link to=\"/about\">About</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/contact\">Contact</Link>\n              </Navigation>\n            </Drawer>\n            <Main />\n            <Content />\n          </Layout>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Home from \"./Components/Home\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Home title=\"Travis's Portfolio is under new construction\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const Types = { MYDEFAULT: \"MYDEFAULT\" };\n","import { Types } from \"./Types\";\n\nlet initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case Types.MYDEFAULT:\n      return state;\n\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"./Reducers\";\nimport thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const history = createBrowserHistory();\n\nconst middleware = [routerMiddleware(history), thunk];\n\nconst store = createStore(\n  connectRouter(history)(reducer), // new root reducer with router state\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/Store\";\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/headshot.b5616af3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mountain2.71028929.jpg\";"],"sourceRoot":""}